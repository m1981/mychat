{
  "projectSummary": {
    "totalFiles": 212,
    "legacyFiles": 26,
    "modernFiles": 186
  },
  "legacyHotspots": [
    {
      "path": "src/test/test-utils.ts",
      "legacyPatterns": [
        {
          "line": 12,
          "content": "export function createTestStore(initialState = {}) {",
          "pattern": "function [a-zA-Z0-9_]+\\(g"
        },
        {
          "line": 113,
          "content": "export function renderWithStore(",
          "pattern": "function [a-zA-Z0-9_]+\\(g"
        },
        {
          "line": 121,
          "content": "function Wrapper({ children }: PropsWithChildren<{}>): JSX.Element {",
          "pattern": "function [a-zA-Z0-9_]+\\(g"
        },
        {
          "line": 131,
          "content": "export function createMockCapability(overrides = {}): CapabilityDefinition {",
          "pattern": "function [a-zA-Z0-9_]+\\(g"
        },
        {
          "line": 147,
          "content": "export function registerMockCapabilities() {",
          "pattern": "function [a-zA-Z0-9_]+\\(g"
        },
        {
          "line": 191,
          "content": "export function clearMockCapabilities() {",
          "pattern": "function [a-zA-Z0-9_]+\\(g"
        },
        {
          "line": 198,
          "content": "export function setupMockLocalStorage() {",
          "pattern": "function [a-zA-Z0-9_]+\\(g"
        }
      ],
      "modernizationRatio": 0.8157894736842105,
      "dependencies": {
        "imports": [],
        "importedBy": [
          "src/test/setup.ts"
        ]
      }
    },
    {
      "path": "src/hooks/useConfiguration.ts",
      "legacyPatterns": [
        {
          "line": 11,
          "content": "function mergeConfigs(current: any, update: any): any {",
          "pattern": "function [a-zA-Z0-9_]+\\(g"
        },
        {
          "line": 56,
          "content": "export function useDefaultConfig() {",
          "pattern": "function [a-zA-Z0-9_]+\\(g"
        },
        {
          "line": 152,
          "content": "export function useChatConfig(chatId) {",
          "pattern": "function [a-zA-Z0-9_]+\\(g"
        },
        {
          "line": 247,
          "content": "export function useCapabilitySupport(capability, provider, model) {",
          "pattern": "function [a-zA-Z0-9_]+\\(g"
        }
      ],
      "modernizationRatio": 0.9259259259259259,
      "dependencies": {
        "imports": [],
        "importedBy": []
      }
    },
    {
      "path": "src/test/mock-providers.ts",
      "legacyPatterns": [
        {
          "line": 8,
          "content": "export function createMockProvider(providerId: ProviderKey = 'mock'): AIProviderInterface {",
          "pattern": "function [a-zA-Z0-9_]+\\(g"
        },
        {
          "line": 170,
          "content": "export function setupMockAPIs() {",
          "pattern": "function [a-zA-Z0-9_]+\\(g"
        },
        {
          "line": 239,
          "content": "export function setupAllMocks() {",
          "pattern": "function [a-zA-Z0-9_]+\\(g"
        }
      ],
      "modernizationRatio": 0.875,
      "dependencies": {
        "imports": [],
        "importedBy": []
      }
    },
    {
      "path": "src/config/chat/ModelConfig.ts",
      "legacyPatterns": [
        {
          "line": 14,
          "content": "export function getModelConfig(overrides?: Partial<ModelConfig>): ModelConfig {",
          "pattern": "function [a-zA-Z0-9_]+\\(g"
        },
        {
          "line": 47,
          "content": "export function getModelCapabilities(modelId: string): ModelCapabilities {",
          "pattern": "function [a-zA-Z0-9_]+\\(g"
        }
      ],
      "modernizationRatio": 0.3333333333333333,
      "dependencies": {
        "imports": [
          "src/config/chat/ChatConfig.ts"
        ],
        "importedBy": []
      }
    },
    {
      "path": "src/hooks/useCapabilities.ts",
      "legacyPatterns": [
        {
          "line": 10,
          "content": "export function useCapabilityComponents(",
          "pattern": "function [a-zA-Z0-9_]+\\(g"
        },
        {
          "line": 27,
          "content": "export function useCapabilityConfig(chatId: string, capabilityId: string) {",
          "pattern": "function [a-zA-Z0-9_]+\\(g"
        }
      ],
      "modernizationRatio": 0.7142857142857143,
      "dependencies": {
        "imports": [],
        "importedBy": []
      }
    },
    {
      "path": "src/hooks/useSubmissionState.ts",
      "legacyPatterns": [
        {
          "line": 41,
          "content": "function submissionReducer(state: SubmissionState, action: SubmissionAction): SubmissionState {",
          "pattern": "function [a-zA-Z0-9_]+\\(g"
        },
        {
          "line": 68,
          "content": "export function useSubmissionState() {",
          "pattern": "function [a-zA-Z0-9_]+\\(g"
        }
      ],
      "modernizationRatio": 0.3333333333333333,
      "dependencies": {
        "imports": [],
        "importedBy": [
          "src/hooks/useSubmit.ts"
        ]
      }
    },
    {
      "path": "src/utils/languageDetection.ts",
      "legacyPatterns": [
        {
          "line": 79,
          "content": "export function detectLanguage(text: string): ExtendedCodeDetectionResult | null {",
          "pattern": "function [a-zA-Z0-9_]+\\(g"
        },
        {
          "line": 99,
          "content": "export function processLanguage(lang: string | undefined): string {",
          "pattern": "function [a-zA-Z0-9_]+\\(g"
        }
      ],
      "modernizationRatio": 0.7777777777777778,
      "dependencies": {
        "imports": [],
        "importedBy": []
      }
    },
    {
      "path": "src/App.tsx",
      "legacyPatterns": [
        {
          "line": 95,
          "content": "function App() {",
          "pattern": "function [a-zA-Z0-9_]+\\(g"
        }
      ],
      "modernizationRatio": 0.9705882352941176,
      "dependencies": {
        "imports": [
          "src/i18n.ts"
        ],
        "importedBy": [
          "src/main.tsx"
        ]
      }
    },
    {
      "path": "src/capabilities/index.ts",
      "legacyPatterns": [
        {
          "line": 13,
          "content": "export function initializeCapabilities(): void {",
          "pattern": "function [a-zA-Z0-9_]+\\(g"
        }
      ],
      "modernizationRatio": 0,
      "dependencies": {
        "imports": [
          "src/capabilities/registry.ts"
        ],
        "importedBy": []
      }
    },
    {
      "path": "src/capabilities/registry.ts",
      "legacyPatterns": [
        {
          "line": 131,
          "content": "export function createCapabilityContext(",
          "pattern": "function [a-zA-Z0-9_]+\\(g"
        }
      ],
      "modernizationRatio": 0.9,
      "dependencies": {
        "imports": [],
        "importedBy": [
          "src/capabilities/file-upload.capability.ts",
          "src/capabilities/index.ts",
          "src/capabilities/standard-config.capability.ts",
          "src/capabilities/thinking-mode.capability.ts"
        ]
      }
    }
  ],
  "highImpactTargets": [
    {
      "path": "src/capabilities/registry.ts",
      "legacyPatterns": [
        {
          "line": 131,
          "content": "export function createCapabilityContext(",
          "pattern": "function [a-zA-Z0-9_]+\\(g"
        }
      ],
      "modernizationRatio": 0.9,
      "dependencies": {
        "imports": [],
        "importedBy": [
          "src/capabilities/file-upload.capability.ts",
          "src/capabilities/index.ts",
          "src/capabilities/standard-config.capability.ts",
          "src/capabilities/thinking-mode.capability.ts"
        ]
      }
    },
    {
      "path": "src/test/test-utils.ts",
      "legacyPatterns": [
        {
          "line": 12,
          "content": "export function createTestStore(initialState = {}) {",
          "pattern": "function [a-zA-Z0-9_]+\\(g"
        },
        {
          "line": 113,
          "content": "export function renderWithStore(",
          "pattern": "function [a-zA-Z0-9_]+\\(g"
        },
        {
          "line": 121,
          "content": "function Wrapper({ children }: PropsWithChildren<{}>): JSX.Element {",
          "pattern": "function [a-zA-Z0-9_]+\\(g"
        },
        {
          "line": 131,
          "content": "export function createMockCapability(overrides = {}): CapabilityDefinition {",
          "pattern": "function [a-zA-Z0-9_]+\\(g"
        },
        {
          "line": 147,
          "content": "export function registerMockCapabilities() {",
          "pattern": "function [a-zA-Z0-9_]+\\(g"
        },
        {
          "line": 191,
          "content": "export function clearMockCapabilities() {",
          "pattern": "function [a-zA-Z0-9_]+\\(g"
        },
        {
          "line": 198,
          "content": "export function setupMockLocalStorage() {",
          "pattern": "function [a-zA-Z0-9_]+\\(g"
        }
      ],
      "modernizationRatio": 0.8157894736842105,
      "dependencies": {
        "imports": [],
        "importedBy": [
          "src/test/setup.ts"
        ]
      }
    },
    {
      "path": "src/hooks/useSubmissionState.ts",
      "legacyPatterns": [
        {
          "line": 41,
          "content": "function submissionReducer(state: SubmissionState, action: SubmissionAction): SubmissionState {",
          "pattern": "function [a-zA-Z0-9_]+\\(g"
        },
        {
          "line": 68,
          "content": "export function useSubmissionState() {",
          "pattern": "function [a-zA-Z0-9_]+\\(g"
        }
      ],
      "modernizationRatio": 0.3333333333333333,
      "dependencies": {
        "imports": [],
        "importedBy": [
          "src/hooks/useSubmit.ts"
        ]
      }
    },
    {
      "path": "src/App.tsx",
      "legacyPatterns": [
        {
          "line": 95,
          "content": "function App() {",
          "pattern": "function [a-zA-Z0-9_]+\\(g"
        }
      ],
      "modernizationRatio": 0.9705882352941176,
      "dependencies": {
        "imports": [
          "src/i18n.ts"
        ],
        "importedBy": [
          "src/main.tsx"
        ]
      }
    },
    {
      "path": "src/components/Chat/ChatContent/Message/Message.tsx",
      "legacyPatterns": [
        {
          "line": 143,
          "content": "return () => resizeObserver.disconnect();",
          "pattern": "connect\\(g"
        }
      ],
      "modernizationRatio": 0.9777777777777777,
      "dependencies": {
        "imports": [
          "src/components/Chat/ChatContent/SelectionCopyProvider.tsx",
          "src/components/Chat/ChatContent/Message/Avatar.tsx",
          "src/components/Chat/ChatContent/Message/JumpToEditButton.tsx",
          "src/components/Chat/ChatContent/Message/MessageActionButtons.tsx",
          "src/components/Chat/ChatContent/Message/MessageContent.tsx",
          "src/components/Chat/ChatContent/Message/RoleSelector.tsx"
        ],
        "importedBy": [
          "src/components/Chat/ChatContent/Message/index.ts"
        ]
      }
    }
  ],
  "isolatedLegacyComponents": [
    {
      "path": "src/test/test-utils.ts",
      "legacyPatterns": [
        {
          "line": 12,
          "content": "export function createTestStore(initialState = {}) {",
          "pattern": "function [a-zA-Z0-9_]+\\(g"
        },
        {
          "line": 113,
          "content": "export function renderWithStore(",
          "pattern": "function [a-zA-Z0-9_]+\\(g"
        },
        {
          "line": 121,
          "content": "function Wrapper({ children }: PropsWithChildren<{}>): JSX.Element {",
          "pattern": "function [a-zA-Z0-9_]+\\(g"
        },
        {
          "line": 131,
          "content": "export function createMockCapability(overrides = {}): CapabilityDefinition {",
          "pattern": "function [a-zA-Z0-9_]+\\(g"
        },
        {
          "line": 147,
          "content": "export function registerMockCapabilities() {",
          "pattern": "function [a-zA-Z0-9_]+\\(g"
        },
        {
          "line": 191,
          "content": "export function clearMockCapabilities() {",
          "pattern": "function [a-zA-Z0-9_]+\\(g"
        },
        {
          "line": 198,
          "content": "export function setupMockLocalStorage() {",
          "pattern": "function [a-zA-Z0-9_]+\\(g"
        }
      ],
      "modernizationRatio": 0.8157894736842105,
      "dependencies": {
        "imports": [],
        "importedBy": [
          "src/test/setup.ts"
        ]
      }
    },
    {
      "path": "src/hooks/useConfiguration.ts",
      "legacyPatterns": [
        {
          "line": 11,
          "content": "function mergeConfigs(current: any, update: any): any {",
          "pattern": "function [a-zA-Z0-9_]+\\(g"
        },
        {
          "line": 56,
          "content": "export function useDefaultConfig() {",
          "pattern": "function [a-zA-Z0-9_]+\\(g"
        },
        {
          "line": 152,
          "content": "export function useChatConfig(chatId) {",
          "pattern": "function [a-zA-Z0-9_]+\\(g"
        },
        {
          "line": 247,
          "content": "export function useCapabilitySupport(capability, provider, model) {",
          "pattern": "function [a-zA-Z0-9_]+\\(g"
        }
      ],
      "modernizationRatio": 0.9259259259259259,
      "dependencies": {
        "imports": [],
        "importedBy": []
      }
    },
    {
      "path": "src/test/mock-providers.ts",
      "legacyPatterns": [
        {
          "line": 8,
          "content": "export function createMockProvider(providerId: ProviderKey = 'mock'): AIProviderInterface {",
          "pattern": "function [a-zA-Z0-9_]+\\(g"
        },
        {
          "line": 170,
          "content": "export function setupMockAPIs() {",
          "pattern": "function [a-zA-Z0-9_]+\\(g"
        },
        {
          "line": 239,
          "content": "export function setupAllMocks() {",
          "pattern": "function [a-zA-Z0-9_]+\\(g"
        }
      ],
      "modernizationRatio": 0.875,
      "dependencies": {
        "imports": [],
        "importedBy": []
      }
    },
    {
      "path": "src/config/chat/ModelConfig.ts",
      "legacyPatterns": [
        {
          "line": 14,
          "content": "export function getModelConfig(overrides?: Partial<ModelConfig>): ModelConfig {",
          "pattern": "function [a-zA-Z0-9_]+\\(g"
        },
        {
          "line": 47,
          "content": "export function getModelCapabilities(modelId: string): ModelCapabilities {",
          "pattern": "function [a-zA-Z0-9_]+\\(g"
        }
      ],
      "modernizationRatio": 0.3333333333333333,
      "dependencies": {
        "imports": [
          "src/config/chat/ChatConfig.ts"
        ],
        "importedBy": []
      }
    },
    {
      "path": "src/hooks/useCapabilities.ts",
      "legacyPatterns": [
        {
          "line": 10,
          "content": "export function useCapabilityComponents(",
          "pattern": "function [a-zA-Z0-9_]+\\(g"
        },
        {
          "line": 27,
          "content": "export function useCapabilityConfig(chatId: string, capabilityId: string) {",
          "pattern": "function [a-zA-Z0-9_]+\\(g"
        }
      ],
      "modernizationRatio": 0.7142857142857143,
      "dependencies": {
        "imports": [],
        "importedBy": []
      }
    }
  ]
}