services:
  app:
    platform: ${PLATFORM:-linux/arm64}
    build:
      context: .
      args:
        - USER_ID=${UID:-501}
        - GROUP_ID=${GID:-501}
      dockerfile: Dockerfile
    container_name: ${COMPOSE_PROJECT_NAME:-mychat}-app
    ports:
      - "5173:5173"
      - "3000:3000"
    volumes:
      - type: bind
        source: .
        target: /app
        bind:
          create_host_path: true
      - type: volume
        source: node_modules
        target: /app/node_modules
      - type: volume
        source: pnpm_store
        target: /home/node/.local/share/pnpm/store
        volume:
          nocopy: false
      - type: volume
        source: pnpm_cache
        target: /home/node/.cache/pnpm
        volume:
          nocopy: false
      - type: volume
        source: vite_cache
        target: /app/node_modules/.vite
        volume:
          nocopy: false
    environment:
      - NODE_ENV=development
      - PNPM_HOME=/home/node/.local/share/pnpm
      - PATH=/home/node/.local/share/pnpm:$PATH
      - PACKAGE_HASH=${PACKAGE_HASH:-default}
      - PNPM_STORE_DIR=/home/node/.local/share/pnpm/store
      - PNPM_CACHE_DIR=/home/node/.cache/pnpm
      - UID=${UID}
      - GID=${GID}
      - VITE_DEV_SERVER_FORCE_CLOSE=true
    stop_signal: SIGINT
    stop_grace_period: 30s
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2G
        reservations:
          cpus: '1'
          memory: 1G
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:5173"]
      interval: 5s
      timeout: 5s
      retries: 3
      start_period: 10s

  shell:
    extends: app
    profiles: ["shell"]
    stdin_open: true
    tty: true
    command: /bin/bash

  visual-test:
    platform: ${PLATFORM:-linux/arm64}
    build:
      context: .
      dockerfile: Dockerfile.visual-test
    profiles: ["visual-testing"]
    container_name: ${COMPOSE_PROJECT_NAME:-mychat}-visual-test
    volumes:
      - type: bind
        source: ${VISUAL_TEST_DIR:-./.tmp/visual-tests}
        target: /visual-tests
        bind:
          create_host_path: true
    environment:
      - NODE_ENV=test
      - TARGET_APP=http://app:5173
    depends_on:
      app:
        condition: service_healthy

  screenshot:
    extends: visual-test
    profiles: ["visual-testing"]
    command: -c "npx puppeteer screenshot --url $$TARGET_APP --path /visual-tests/screenshots/${COMMIT_HASH:-latest}.png"

  compare:
    extends: visual-test
    profiles: ["visual-testing"]
    command: -c "npx pixelmatch /visual-tests/screenshots/${PREV_COMMIT_HASH}.png /visual-tests/screenshots/${COMMIT_HASH}.png /visual-tests/diffs/${COMMIT_HASH}_diff.png"

volumes:
  node_modules:
    name: "mychat-node_modules"
    external: true
  pnpm_store:
    name: "mychat-pnpm_store"
    external: true
  pnpm_cache:
    name: "mychat-pnpm_cache"
    external: true
  vite_cache:
    name: "mychat-vite_cache"
    external: true
