name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:
    inputs:
      action:
        description: 'Action to perform'
        required: true
        default: 'test'
        type: choice
        options:
          - test
          - accept-references

permissions:
  contents: write
  pages: write
  id-token: write
  issues: write
  pull-requests: write

jobs:
  lint-typecheck:
    runs-on: ubuntu-latest
    container:
      image: node:22-slim
    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v2
        with:
          version: 10.4.1
      - run: pnpm install
      - run: pnpm lint
      - run: pnpm type-check

  unit-tests:
    runs-on: ubuntu-latest
    container:
      image: node:22-slim
    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v2
        with:
          version: 10.4.1
      - run: pnpm install
      - run: pnpm test
      - name: Upload test coverage
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: coverage/

  build-test:
    runs-on: ubuntu-latest
    container:
      image: node:22-slim
    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v2
        with:
          version: 10.4.1
      - run: PNPM_FROZEN_LOCKFILE=true pnpm install
      - run: NODE_ENV=production pnpm build:vite
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: dist/

  visual-tests:
    runs-on: ubuntu-latest
    # Add environment configuration for Pages
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    if: github.event.inputs.action != 'accept-references'
    services:
      selenium:
        image: selenium/standalone-chromium:latest
        options: --shm-size="2g"
        ports:
          - 4444:4444
          - 7900:7900
      app:
        image: node:22-slim
        ports:
          - 5173:5173
    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v2
        with:
          version: 10.4.1
      
      # Install dependencies
      - name: Install dependencies
        run: pnpm install
      
      # Configure Pages
      - name: Setup Pages
        uses: actions/configure-pages@v4

      # Start app in background
      - name: Start app
        run: |
          pnpm dev:host &
          echo "Waiting for app to start..."
          sleep 15

      # Run BackstopJS tests
      - name: Run visual tests
        id: backstop_test
        continue-on-error: true
        env:
          PUPPETEER_SKIP_CHROMIUM_DOWNLOAD: "true"
          PUPPETEER_EXECUTABLE_PATH: "/usr/bin/chromium"
        run: |
          pnpm backstop test || true
          echo "status=$?" >> $GITHUB_OUTPUT

      # Prepare report with images for GitHub Pages
      - name: Prepare report for GitHub Pages
        if: always()
        run: |
          # Create a directory for the complete report
          mkdir -p gh-pages-report
          
          # Copy the HTML report
          cp -r backstop_data/html_report/* gh-pages-report/
          
          # Create directories for images
          mkdir -p gh-pages-report/bitmaps_reference
          mkdir -p gh-pages-report/bitmaps_test
          
          # Copy reference images
          cp -r backstop_data/bitmaps_reference/* gh-pages-report/bitmaps_reference/ || true
          
          # Copy test images and diffs
          cp -r backstop_data/bitmaps_test/* gh-pages-report/bitmaps_test/ || true
          
          # Fix paths in config.js
          sed -i 's/\.\.\/bitmaps_reference/\.\/bitmaps_reference/g' gh-pages-report/config.js
          sed -i 's/\.\.\/bitmaps_test/\.\/bitmaps_test/g' gh-pages-report/config.js

      # Upload Pages artifact with complete report
      - name: Upload Pages artifact
        if: always()
        uses: actions/upload-pages-artifact@v3
        with:
          path: 'gh-pages-report'

      # Deploy to GitHub Pages
      - name: Deploy to GitHub Pages
        if: always()
        id: deployment
        uses: actions/deploy-pages@v4

      # Update PR comment with new URL format
      - name: Comment PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          script: |
            const reportUrl = `https://${context.repo.owner}.github.io/${context.repo.repo}/reports/${context.sha}`;
            const acceptUrl = `${process.env.GITHUB_SERVER_URL}/${process.env.GITHUB_REPOSITORY}/actions/workflows/visual-testing.yml`;
            
            const comment = `
            ## Visual Regression Test Results
            
            ðŸ“Š [View Full Report](${reportUrl})
      
            If the changes are intentional, you can accept them as new references:
            1. Go to [Visual Testing Workflow](${acceptUrl})
            2. Click "Run workflow"
            3. Select "accept-references" from the dropdown
            4. Click "Run workflow"
            `;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

      # Upload test results as artifacts
      - name: Upload visual test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: backstop-report
          path: backstop_data/

  accept-references:
    runs-on: ubuntu-latest
    if: github.event.inputs.action == 'accept-references'
    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v2
        with:
          version: 10.4.1

      - name: Install dependencies
        run: pnpm install

      - name: Accept References
        run: |
          pnpm backstop approve
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "GitHub Actions Bot"
          git add backstop_data/bitmaps_reference
          git commit -m "Update visual references [skip ci]"
          git push origin main

  deploy-preview:
    needs: [lint-typecheck, unit-tests, build-test, visual-tests]
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@v3
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build
          path: dist
      # Add your deployment steps here
      - name: Deploy to preview environment
        run: echo "Deploying to preview environment"
        # This would typically use a service like Vercel, Netlify, etc.

  # Add this job to implement E2E tests on the preview deployment
  e2e-tests:
    needs: [deploy-preview]
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v2
        with:
          version: 10.4.1
      - run: pnpm install
      - name: Run E2E tests
        run: echo "Running E2E tests on preview deployment"
        # This would typically use Cypress, Playwright, etc.

  # Add this job to implement Production Build and Deploy
  deploy-production:
    needs: [lint-typecheck, unit-tests, build-test, visual-tests]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v2
        with:
          version: 10.4.1
      - run: PNPM_FROZEN_LOCKFILE=true pnpm install
      - run: NODE_ENV=production pnpm build:vite
      - name: Deploy to production
        run: echo "Deploying to production"
        # This would typically use a service like Vercel, Netlify, etc.
