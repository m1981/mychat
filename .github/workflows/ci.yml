name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  lint-typecheck:
    runs-on: ubuntu-latest
    container:
      image: node:22-slim
    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v2
        with:
          version: 10.4.1
      - run: pnpm install
      - run: pnpm lint
      - run: pnpm type-check

  unit-tests:
    runs-on: ubuntu-latest
    container:
      image: node:22-slim
    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v2
        with:
          version: 10.4.1
      - run: pnpm install
      - run: pnpm test
      - name: Upload test coverage
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: coverage/

  build-test:
    runs-on: ubuntu-latest
    container:
      image: node:22-slim
    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v2
        with:
          version: 10.4.1
      - run: PNPM_FROZEN_LOCKFILE=true pnpm install
      - run: NODE_ENV=production pnpm build:vite
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: dist/

  visual-tests:
    runs-on: ubuntu-latest
    services:
      selenium:
        image: selenium/standalone-chromium:latest
        options: --shm-size="2g"
        ports:
          - 4444:4444
          - 7900:7900
      app:
        image: node:22-slim
        ports:
          - 5173:5173
    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v2
        with:
          version: 10.4.1
      
      # Install dependencies
      - name: Install dependencies
        run: pnpm install
      
      # Start app in background
      - name: Start app
        run: |
          pnpm dev:host &
          echo "Waiting for app to start..."
          sleep 15

      # Run BackstopJS tests with environment variables
      - name: Run visual tests
        env:
          PUPPETEER_SKIP_CHROMIUM_DOWNLOAD: "true"
          PUPPETEER_EXECUTABLE_PATH: "/usr/bin/chromium"
        run: |
          pnpm backstop test || true
      
      # Upload test results
      - name: Upload visual test results
        uses: actions/upload-artifact@v4
        with:
          name: backstop-report
          path: backstop_data/

      # Add this step after running visual tests
      - name: Publish BackstopJS Report
        uses: actions/upload-artifact@v4
        with:
          name: backstop-html-report
          path: backstop_data/html_report

      # Optional: Add a comment to the PR with the report link
      - name: Comment PR with Report Link
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'ðŸ“Š [Visual Regression Test Report](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})'
            })

  # Add this job to implement the Quality Gate and Deploy Preview
  deploy-preview:
    needs: [lint-typecheck, unit-tests, build-test, visual-tests]
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@v3
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build
          path: dist
      # Add your deployment steps here
      - name: Deploy to preview environment
        run: echo "Deploying to preview environment"
        # This would typically use a service like Vercel, Netlify, etc.

  # Add this job to implement E2E tests on the preview deployment
  e2e-tests:
    needs: [deploy-preview]
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v2
        with:
          version: 10.4.1
      - run: pnpm install
      - name: Run E2E tests
        run: echo "Running E2E tests on preview deployment"
        # This would typically use Cypress, Playwright, etc.

  # Add this job to implement Production Build and Deploy
  deploy-production:
    needs: [lint-typecheck, unit-tests, build-test, visual-tests]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v2
        with:
          version: 10.4.1
      - run: PNPM_FROZEN_LOCKFILE=true pnpm install
      - run: NODE_ENV=production pnpm build:vite
      - name: Deploy to production
        run: echo "Deploying to production"
        # This would typically use a service like Vercel, Netlify, etc.
