classDiagram
    %% Core Components
    class useTitleGeneration {
        -generateTitle()
        -handleTitleGeneration()
        +useStore.getState()
        +direct API key access
        +direct provider access
    }
    
    class TitleGenerationService {
        -generateAndUpdateTitle()
        +useStore.getState()
    }
    
    class TitleGenerator {
        -generateChatTitle()
        -formatTitlePrompt()
    }
    
    class ChatSubmissionService {
        -submit()
        -submitStream()
        -handleResponse()
    }
    
    class useSubmit {
        -handleSubmit()
        -regenerateMessage()
        -stopGeneration()
        +useStore.getState()
    }
    
    %% Global State
    class useStore {
        <<global>>
        +getState()
        +setState()
    }
    
    %% External Dependencies
    class providers {
        <<global>>
        +formatRequest()
        +parseResponse()
    }
    
    %% Relationships with SOLID violations
    useTitleGeneration --> TitleGenerationService : creates & uses
    useTitleGeneration --> TitleGenerator : creates indirectly
    useTitleGeneration --> ChatSubmissionService : creates & uses
    useTitleGeneration --> useStore : direct access
    useTitleGeneration --> providers : direct access
    
    TitleGenerationService --> TitleGenerator : uses
    TitleGenerationService --> useStore : direct access
    
    TitleGenerator --> ChatSubmissionService : uses indirectly
    
    useSubmit --> useTitleGeneration : calls
    useSubmit --> useStore : direct access
    
    %% SOLID Violations
    class SRPViolations {
        <<SOLID Violation>>
        useTitleGeneration: Multiple responsibilities
        ChatSubmissionService: Handles both streaming and non-streaming
        TitleGenerator: Formatting and API interaction
    }
    
    class OCPViolations {
        <<SOLID Violation>>
        ChatSubmissionService: Must modify to add new providers
        useTitleGeneration: Hard-coded provider logic
    }
    
    class LSPViolations {
        <<SOLID Violation>>
        ChatSubmissionService.submit(): Inconsistent return types
        No clear interface contracts
    }
    
    class ISPViolations {
        <<SOLID Violation>>
        No separate interfaces for different use cases
        Monolithic service classes
    }
    
    class DIPViolations {
        <<SOLID Violation>>
        Direct global state dependencies
        Concrete class dependencies instead of interfaces
        Hard-coded provider dependencies
    }
    
    %% Connect violations to components
    SRPViolations --> useTitleGeneration
    SRPViolations --> ChatSubmissionService
    SRPViolations --> TitleGenerator
    
    OCPViolations --> ChatSubmissionService
    OCPViolations --> useTitleGeneration
    
    LSPViolations --> ChatSubmissionService
    
    ISPViolations --> ChatSubmissionService
    ISPViolations --> TitleGenerationService
    
    DIPViolations --> useTitleGeneration
    DIPViolations --> TitleGenerationService
    DIPViolations --> ChatSubmissionService
    
    %% Testing Challenges
    class TestingChallenges {
        <<Testing Issue>>
        Global state makes testing difficult
        Tight coupling requires extensive mocking
        No clear interfaces to mock
        Side effects are hard to isolate
    }
    
    TestingChallenges --> useTitleGeneration
    TestingChallenges --> TitleGenerationService
    TestingChallenges --> ChatSubmissionService
    
    %% Maintenance Issues
    class MaintenanceIssues {
        <<Maintenance Issue>>
        Changes ripple through multiple components
        Hard to understand component responsibilities
        Difficult to extend without modifying
        Implicit dependencies create hidden bugs
    }
    
    MaintenanceIssues --> useTitleGeneration
    MaintenanceIssues --> TitleGenerationService
    MaintenanceIssues --> ChatSubmissionService
    
    %% Data Flow Issues
    class DataFlowIssues {
        <<Data Flow Issue>>
        Unclear data transformation path
        Mixed concerns in data handling
        Global state access throughout
        No clear ownership of data
    }
    
    DataFlowIssues --> useTitleGeneration
    DataFlowIssues --> TitleGenerationService
    DataFlowIssues --> ChatSubmissionService